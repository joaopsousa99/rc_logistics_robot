<?xml version="1.0"?>
<launch>
  <!-- Arguments -->
  <arg name="model" default="waffle" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="x_pos" default="6.0"/>
  <arg name="y_pos" default="1.7"/>
  <arg name="z_pos" default="0.05"/>
  <arg name="gamepad" default="false" doc="use gamepad"/>

  <!-- Gazebo arguments -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name"    value="$(find rc_logistics_robot)/worlds/sim.world"/>
    <arg name="paused"        value="false"/>
    <arg name="use_sim_time"  value="true"/>
    <arg name="gui"           value="true"/>
    <arg name="headless"      value="false"/>
    <arg name="debug"         value="false"/>
  </include> 

  <!-- TurtleBot3 URDF -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <!-- Run spawn_model -->
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

  <!-- Run robot_state_publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />

  <!-- IF gamepad == true THEN use(gamepad) ELSE use(keyboard) -->
  <group if="$(arg gamepad)">
    <node name="joy_node" pkg="joy" type="joy_node"  />
    <node name="teleop_node" pkg="teleop_twist_joy" type="teleop_node"  />
  </group>
  <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop" output="screen" unless="$(arg gamepad)" />
  
  <!-- Run slam_gmapping -->
  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" args="scan:=scan" >
    <rosparam file="$(find rc_logistics_robot)/param/sim/mapping_params.yaml" command="load" />
  </node>

  <!-- Run rviz -->
  <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find rc_logistics_robot)/rviz/mapping_real.rviz"/>
</launch>
